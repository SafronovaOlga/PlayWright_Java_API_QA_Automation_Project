package pages;import com.microsoft.playwright.ElementHandle;import com.microsoft.playwright.Locator;import com.microsoft.playwright.Page;import com.microsoft.playwright.options.AriaRole;import java.util.List;import static com.microsoft.playwright.assertions.PlaywrightAssertions.assertThat;public class HomePage {        private  Page page;        // кнопка поиска в хедере    //private String locatorButtonSearch = "";        // Поле для ввода Поиск   // private String locatorInputSearch = "";        // Текст результата поиска    private String locatorTextHomeTitle = "Hands-On Selenium WebDriver with Java";        private String urlBase = "https://bonigarcia.dev/selenium-webdriver-java/";    private String pageUrl = "web-form.html";        // STEPS    public HomePage (Page page) {        super( );        this.page = page;    }        public Locator locator (String xPath) {                return page.locator(xPath);    }        public void openURL () {                page.navigate(urlBase);    }        public void checkURL (String url) {        assertThat(page.locator("/")).containsText(url);            }        public Locator homeLocator(String text) {        return page.locator("#menu-item-1226")                .getByRole( AriaRole.LINK, new Locator                        .GetByRoleOptions()                        .setName(text));    }        public Locator headingLocator (String text) {        return page.getByRole( AriaRole.HEADING, new Page.GetByRoleOptions().setName(text));    }        public Locator linkLocator(String text) {        return page.getByRole(AriaRole.LINK, new Page.GetByRoleOptions()                .setName(text));    }        public Locator buttonLocator(String text) {        return page.getByRole(AriaRole.BUTTON, new Page.GetByRoleOptions()                .setName(text));    }            public String getHomePageTitle() {        return page.title();    }        /*public void navigate() {        page.navigate("https://bonigarcia.dev/selenium-webdriver-java/");    }*/        public String getTextHomeTitle (String text) {                return page.textContent(locatorTextHomeTitle);    }        public String clickOnCheckbox (String name) {        page.click("input[name='" + name + "']");        return name;    }        public void verifyCheckboxIsChecked (String name) {        boolean checked = page.isChecked ("input[name='" + name + "']");        assert checked : "Checkbox should be checked";    }        public void verifyCheckboxIsNotChecked (String name) {        boolean checked = page.isChecked ("input[name='" + name + "']");        assert !checked : "Checkbox should not be checked";    }        public void verifyAllChapterLinksAreClickable() {              // Находим все <a> ссылки внутри основного контента        List<ElementHandle> links = page.querySelectorAll("main a[href]");                System.out.println("Found links: " + links.size());                for (ElementHandle link : links) {            String href = link.getAttribute("href");            if (href == null || href.startsWith("#")) continue; // Пропустить якоря                        // Открываем ссылку в новой вкладке            Page newTab = page.context().newPage();            newTab.navigate(href.startsWith("http") ? href : "https://bonigarcia.dev/selenium-webdriver-java/" + href);                        // Проверка, что страница открылась            boolean pageLoaded = newTab.title() != null && !newTab.title().isEmpty();                        if (!pageLoaded) {                throw new RuntimeException("Ссылка не работает: " + href);            }            System.out.println("✅ " + href + " — OK (" + newTab.title() + ")");                        newTab.close();        }    }        //method -> open another Page Object    public WebFormPage openWebFormPage()  {                page.getByTitle("Web form").click();        //page.locator("css=.display-6.heading").click();                return new WebFormPage(page);    }       // @Step("Open Navigation page")   // public NavigationPage openNavigationPage() {     //   page.textContent("Navigation");      //  driver.findElement(By.linkText("Navigation")).click();       // return new NavigationPage(page);   // }        public void scrollTo(String sectionTitle) {                page.locator("text=" + sectionTitle).scrollIntoViewIfNeeded();    }        public boolean isSectionVisible(String sectionTitle) {                return page.isVisible("text=" + sectionTitle);    }        public String getSectionText(String sectionTitle) {                Locator section = page.locator("text=" + sectionTitle).first();        return section.textContent();    }        public Locator getLink (String text) {                return page.getByRole( AriaRole.LINK, new Page.GetByRoleOptions().setName(text));    }        public void hoverMenu (String menu) {                getLink(menu).hover();    }        public void clickMenu (String menu) {                getLink(menu).click();    }        public void getPageUrl(){                var string = urlBase + pageUrl;    }            /*public Object getImgHomePage( ){        return imgHomePage;    }        public void setImgHomePage( Object imgHomePage ){        this.imgHomePage=imgHomePage;    }*/}