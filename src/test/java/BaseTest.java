import com.microsoft.playwright.*;import org.testng.annotations.*;public class BaseTest {        protected Playwright playwright;    protected Browser browser;    protected BrowserContext context;    protected Page page;        @BeforeMethod    public void setup() {        playwright = Playwright.create();        browser = playwright.chromium().launch(new BrowserType.LaunchOptions().setHeadless(false));        context = browser.newContext();        page= context.newPage();    }        @AfterMethod    public void tearDown() {        page.close();        context.close();        browser.close();        playwright.close();    }    /*private static Playwright playwright;    private static Browser browser;    private BrowserContext context;    private Page page;        protected Page getPage() {        return page;    }        protected static Playwright getPlaywright() {                return playwright;    }        protected static Browser getBrowser(String browser, boolean headless) {        switch (browser) {            case "chromium" -> {                return getPlaywright().chromium().launch(new BrowserType.LaunchOptions().setHeadless(headless));            }            case "webkit" -> {                return getPlaywright().webkit().launch(new BrowserType.LaunchOptions().setHeadless(headless));            }            case "firefox" -> {                return getPlaywright().firefox().launch(new BrowserType.LaunchOptions().setHeadless(headless));            }            default -> {                return null;            }        }    }*/        /*@BeforeClass    protected static void launchBrowser() {        playwright = Playwright.create();        browser = getBrowser("chromium", false);    }    *//*@BeforeAll    protected static void launchBrowser() {        playwright = Playwright.create();      //  browser = getBrowser("chromium", false);    }*//*        @BeforeMethod    protected void createContextAndPage() {        this.context = browser.newContext();        this.page = context.newPage();        page.navigate(BASE_URL);    }        @AfterClass    protected static void closeBrowser() {        browser.close();        playwright.close();    }        @AfterMethod    protected void closeContext() {        context.close();    }*/}